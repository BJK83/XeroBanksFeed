<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-OOSHD4UL" failures="0" tests="6" name="Default test" time="0.182" errors="0" timestamp="2020-08-02T21:38:57 NZST">
  <testcase classname="xeroTest.TestBase" name="@BeforeClass launchApplication" time="0.06">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: C:\XeroBanksFeed\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\XeroBanksFeed\chromedriver.exe
at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at xeroTest.TestBase.launchApplication(TestBase.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass launchApplication -->
  <testcase classname="xeroTest.BanksFeedTest" name="@BeforeClass beforeClass" time="-1.596361137171E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="xeroTest.BanksFeedTest" name="@AfterMethod afterTest" time="-1.596361137206E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase classname="xeroTest.BanksFeedTest" name="@AfterMethod afterTest" time="-1.596361137214E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase classname="xeroTest.BanksFeedTest" name="@AfterMethod afterTest" time="-1.596361137219E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase classname="xeroTest.BanksFeedTest" name="@AfterMethod afterTest" time="-1.596361137229E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase classname="xeroTest.BanksFeedTest" name="@AfterMethod afterTest" time="-1.59636113724E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase classname="xeroTest.BanksFeedTest" name="@AfterMethod afterTest" time="-1.596361137246E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase classname="xeroTest.BanksFeedTest" name="@AfterClass tearDown" time="-1.596361137248E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="xeroTest.TestBase" name="@AfterClass closeBrowser" time="-1.596361137249E9">
    <skipped/>
  </testcase> <!-- @AfterClass closeBrowser -->
  <testcase classname="xeroTest.BanksFeedTest" name="testAddBank" time="0.0">
    <skipped/>
  </testcase> <!-- testAddBank -->
  <testcase classname="xeroTest.BanksFeedTest" name="testAddBank" time="0.0">
    <skipped/>
  </testcase> <!-- testAddBank -->
  <testcase classname="xeroTest.BanksFeedTest" name="testAddBank" time="0.0">
    <skipped/>
  </testcase> <!-- testAddBank -->
  <testcase classname="xeroTest.BanksFeedTest" name="testAddBank" time="0.0">
    <skipped/>
  </testcase> <!-- testAddBank -->
  <testcase classname="xeroTest.BanksFeedTest" name="testAddBank" time="0.0">
    <skipped/>
  </testcase> <!-- testAddBank -->
  <testcase classname="xeroTest.BanksFeedTest" name="testAddDuplicateBank" time="0.0">
    <skipped/>
  </testcase> <!-- testAddDuplicateBank -->
</testsuite> <!-- Default test -->
